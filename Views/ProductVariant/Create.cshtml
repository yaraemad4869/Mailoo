@model Mailoo.Models.ProductVariant
@{
    ViewData["Title"] = "Add New Product Variant";
}

<style>
    .container1 {
        background-color: rgba(143, 217, 251, 0.2);
        border-radius: 10px;
        padding: 2%;
        width: 50%;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.4);
        margin: auto;
    }

    .form-control {
        width: 304px;
    }
</style>

<h2 class="text-primary">Add New Product Variant</h2>
<hr />

<div class="container1 justify-center mt-5">
    <div class="row justify-content-center">
        <div class="col-md-4">
            <form method="post" asp-action="Create">
                <div asp-validation-summary="All"></div>

                <div class="form-group mb-3">
                    <label for="ProductId">Product</label>
                    <select asp-for="ProductId" class="form-control" asp-items="ViewBag.Products">
                        <option value="">Select Product</option>
                    </select>
                </div>

                <h4>Available Colors:</h4>
                <div id="colorOptions">
                    @if (ViewBag.Colors != null)
                    {
                        @foreach (var color in ViewBag.Colors)
                        {
                            <label>
                                <input type="checkbox" class="color-checkbox" value="@color.Id" data-name="@color.ColorName" />
                                @color.ColorName
                            </label>
                            <br />
                        }
                    }
                    else
                    {
                        <p class="text-danger">⚠ No colors available.</p>
                    }
                </div>


                <h4>Available Sizes:</h4>
                <div id="sizeOptions">
                    @foreach (var size in ViewBag.Sizes)
                    {
                        <label>
                            <input type="checkbox" class="size-checkbox" value="@size.Id" data-name="@size.SizeName" />
                            @size.SizeName
                        </label>
                        <br />
                    }
                </div>

                <h4>Enter Quantity for Each (Color + Size):</h4>
                <div id="variants"></div>

                <hr />
                <button type="submit" class="btn btn-success">Save</button>
                <a asp-action="Index" class="btn btn-secondary">Back to Variants</a>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let colorCheckboxes = document.querySelectorAll(".color-checkbox");
            let sizeCheckboxes = document.querySelectorAll(".size-checkbox");
            let variantsContainer = document.getElementById("variants");

            function updateVariants() {
                variantsContainer.innerHTML = "";

                let selectedColors = Array.from(colorCheckboxes).filter(c => c.checked);
                let selectedSizes = Array.from(sizeCheckboxes).filter(s => s.checked);

                selectedColors.forEach(color => {
                    selectedSizes.forEach(size => {
                        let colorId = color.value;
                        let colorName = color.dataset.name;
                        let sizeId = size.value;
                        let sizeName = size.dataset.name;

                        let variantHtml = `
                                    <div class="variant">
                                        <label>Quantity (${colorName} - ${sizeName}):</label>
                                        <input type="hidden" name="ColorIds" value="${colorId}" />
                                        <input type="hidden" name="SizeIds" value="${sizeId}" />
                                        <input type="number" name="Quantities" class="form-control" required min="1" />
                                    </div>
                                `;
                        variantsContainer.innerHTML += variantHtml;
                    });
                });
            }

            colorCheckboxes.forEach(cb => cb.addEventListener("change", updateVariants));
            sizeCheckboxes.forEach(cb => cb.addEventListener("change", updateVariants));
        });
    </script>
}
